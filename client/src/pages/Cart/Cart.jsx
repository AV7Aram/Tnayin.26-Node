import React, { useState, useEffect } from 'react';
import { toast } from 'react-toastify';
import { useAuth } from '../../context/AuthContext';
import { cartAPI } from '../../services/api';
import './Cart.css';

const Cart = () => {
    const [cartItems, setCartItems] = useState([]);
    const [loading, setLoading] = useState(true);
    const { isAuthenticated, user, isAdmin } = useAuth();

    useEffect(() => {
        if (isAuthenticated && user && !isAdmin) {
            fetchCart();
        } else {
            setLoading(false);
        }
    }, [isAuthenticated, user, isAdmin]);

    const fetchCart = async () => {
        try {
            const response = await cartAPI.getCart(user.id);
            const items = (response.data?.items || []).map(item => ({
                ...item,
                ...(item.product || {}),
            }));
            setCartItems(items);
        } catch (error) {
            toast.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ—Ä–∑–∏–Ω—ã');
        } finally {
            setLoading(false);
        }
    };

    if (!isAuthenticated) {
        return (
            <div className="cart-page">
                <div className="auth-required">
                    <h2>–î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∫–æ—Ä–∑–∏–Ω—ã –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤–æ–π—Ç–∏ –≤ –∞–∫–∫–∞—É–Ω—Ç</h2>
                    <p>–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–æ–π–¥–∏—Ç–µ –∏–ª–∏ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å</p>
                </div>
            </div>
        );
    }
    if (isAdmin) {
        return (
            <div className="cart-page">
                <div className="admin-no-cart">
                    <span className="admin-icon">üëë</span>
                    <h2>–£ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –Ω–µ—Ç –∫–æ—Ä–∑–∏–Ω—ã</h2>
                    <p>–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —É–ø—Ä–∞–≤–ª—è–µ—Ç —Ç–æ–≤–∞—Ä–∞–º–∏ –∏ –∑–∞–∫–∞–∑–∞–º–∏, –Ω–æ –Ω–µ —Å–æ–≤–µ—Ä—à–∞–µ—Ç –ø–æ–∫—É–ø–∫–∏.</p>
                </div>
            </div>
        );
    }
    if (loading) {
        return <div className="loading">–ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ—Ä–∑–∏–Ω—ã...</div>;
    }

    if (cartItems.length === 0) {
        return (
            <div className="cart-page">
                <div className="empty-cart">
                    <h2>–ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞</h2>
                    <p>–î–æ–±–∞–≤—å—Ç–µ —Ç–æ–≤–∞—Ä—ã –∏–∑ –∫–∞—Ç–∞–ª–æ–≥–∞</p>
                </div>
            </div>
        );
    }

    const updateQuantity = async (productId, newQuantity) => {
        if (newQuantity < 1) return;

        const updatedItems = cartItems.map(item =>
            item.productId === productId ? { ...item, quantity: newQuantity } : item
        );

        try {
            await cartAPI.updateCart(user.id, updatedItems);
            setCartItems(updatedItems);
            toast.success('–ö–æ—Ä–∑–∏–Ω–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∞');
        } catch (error) {
            console.error('Error updating cart:', error);
            toast.error('–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–æ—Ä–∑–∏–Ω—ã');
        }
    };

    const removeItem = async (productId) => {
        const updatedItems = cartItems.filter(item => item.productId !== productId);

        try {
            await cartAPI.updateCart(user.id, updatedItems);
            setCartItems(updatedItems);
            toast.success('–¢–æ–≤–∞—Ä —É–¥–∞–ª–µ–Ω –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã');
        } catch (error) {
            console.error('Error removing item:', error);
            toast.error('–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞');
        }
    };
    const getTotalPrice = () => {
        return cartItems.reduce((total, item) => total + (item.price * item.quantity), 0);
    };

    return (
        <div className="cart-page">
            <div className="cart-header">
                <h1>–ö–æ—Ä–∑–∏–Ω–∞ –ø–æ–∫—É–ø–æ–∫</h1>
                <span className="items-count">{cartItems.length} —Ç–æ–≤–∞—Ä–æ–≤</span>
            </div>

            <div className="cart-content">
                <div className="cart-items">
                    {cartItems.map(item => (
                        <div key={item.productId} className="cart-item">
                            <div className="item-image">
                                <img src={item.image || '/placeholder-product.jpg'} alt={item.name} />
                            </div>
                            <div className="item-details">
                                <h3 className="item-name">{item.name}</h3>
                                <p className="item-price">{item.price} ‚ÇΩ</p>
                            </div>
                            <div className="item-quantity">
                                <button
                                    onClick={() => updateQuantity(item.productId, item.quantity - 1)}
                                    className="quantity-btn"
                                >-</button>
                                <span className="quantity">{item.quantity}</span>
                                <button
                                    onClick={() => updateQuantity(item.productId, item.quantity + 1)}
                                    className="quantity-btn"
                                >+</button>
                            </div>
                            <div className="item-total">
                                {item.price * item.quantity} ‚ÇΩ
                            </div>
                            <button
                                onClick={() => removeItem(item.productId)}
                                className="remove-btn"
                            >üóëÔ∏è</button>
                        </div>
                    ))}
                </div>

                <div className="cart-summary">
                    <div className="summary-card">
                        <h3>–ò—Ç–æ–≥–æ</h3>

                        <div className="summary-row">
                            <span>–¢–æ–≤–∞—Ä—ã:</span>
                            <span>{getTotalPrice()} ‚ÇΩ</span>
                        </div>

                        <div className="summary-row">
                            <span>–î–æ—Å—Ç–∞–≤–∫–∞:</span>
                            <span>–ë–µ—Å–ø–ª–∞—Ç–Ω–æ</span>
                        </div>

                        <div className="summary-divider"></div>

                        <div className="summary-row total">
                            <span>–û–±—â–∞—è —Å—É–º–º–∞:</span>
                            <span>{getTotalPrice()} ‚ÇΩ</span>
                        </div>

                        <button className="checkout-btn">
                            –û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑
                        </button>
                    </div>
                </div>
            </div>
        </div>
    );
};

export default Cart;